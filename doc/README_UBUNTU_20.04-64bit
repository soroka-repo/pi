
 Ubuntu 20.04 64bit installation on a Raspberry PI 4 w/4G

# NOTE: wireguard is the VPN for UB20 apt install wireguard#

# ___ get an id on hub.docker.com we will use the docker hub to push any changes we make to the images for backup
#     or use to update other pi(s) it's free
#
# ___ get an id on github.com it will be used to store yaml files so you can setup the docker containers on other pi(s)


# ___ write the ubuntu-20.04-preinstalled-server-amd64+raspi.img to the SD card

# ___ boot the SD username/password is ubuntu/ubuntu update to a strong password
      # SWITCH Desktops after you enter the the username click the gear in the lower left to choose the desktop
      # select xubuntu the other 2 (ubuntu and xfce) seem to get stuck with a blank screen

# ___ verify that you got a dhcp assigned IP addr
 ip addr;

# ___ update, upgrade and install
 sudo su;
 apt update;
 apt upgrade; ### upgrade may fail with a lock due to auto upgrade running just geep trying "apt update" until no further packages are 
              ### installed then run "apt upgrade" again

 apt install net-tools xubuntu-desktop; ### install xubuntu, I picked gddm perhaps we want the other option since thia is the gui UB
 sudo apt-get install python3 python3-dev python3-venv python3-pip libffi-dev libssl-dev autoconf build-essential; ### install pre-reqa for home assistant
 reboot;

# ___ change the userid from ubuntu to your id, example will show userid "joeuser", this is for security the hackers will try "ubuntu"
 sudo su;
 cd /etc;
 for i in "passwd" "group" "shadow" "gshadow"; do sed 's/ubuntu/joeuser/g' -i $i; done;
 sed 's/Ubuntu/soroka/g' -i /etc/passwd
 mv /home/ubuntu /home/joeuser;
 reboot; ### just to make sure you did it correctly and we can still log on

# ___ set the IP address to static so it will always be the same
 sudo vi /etc/netplan/50-cloud-init.yaml; ### change it from: to: observing correct yaml column formatting
###from:
/etc/netplan$ cat 50-cloud-init.yaml 
network:
    ethernets:
        eth0:
            dhcp4: true
            optional: true
    version: 2

###to:
network:
    version: 2
    ethernets:
        eth0:
            addresses:
              - 192.168.1.50/24
            gateway4: 192.168.1.1


# ___ change the hostname from: ubuntu to: something meaningful to you, this is for security the hackers will look for hostname "ubuntu"
 dudo hostname <new hostname>;

# ___ install docker
 sudo su;
 apt install snap;
 snap install docker;

# ___ test docker install
 exit; ### try the following commands from your userid not root
 systemctl status snap.docker.dockerd.service; ### check that docker is running
 docker --version; 
 docker-compose version;
 sudo docker run hello-world; ### get the docker hello-world image from docker hub and startup a container running it
 sudo docker images; ### list the docker image
 sudo docker ps -a; ### list the docker container (instance) of the docker image
 sudo docker stop <CONTAINER ID>; ### stop the runnning container with the ID from the "docker ps -a" command
 sudo docker rm <CONTAINER ID>; ### delete the container with the ID from the "docker ps -a" command
 sudo docker rmi hello-world; ### delete the hellow-world image (REPOSITARY) 
 

# ___ run Home Assistant, this is just the first attempt we need to build a app stack with docker-composre, lets just take a look...
 mkdir -p ~/HA;
 cd ~/HA;
 vi docker-compose.yml; ### create the following observing the yaml column formatting

 $ cat docker-compose.yml

version: '3'
services:
  homeassistant:
    container_name: home-assistant
    image: homeassistant/raspberrypi4-homeassistant:stable
    volumes:
      - /home/soroka/HA:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=America/New_York
    restart: always
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: 30s
      timeout: 10s
      retries: 6




 sudo docker-compose up -d; ### execute from the dir the above yaml file is in to start up the instance 

### to restart use:
  sudo docker-compose restart; ### to restart Home Assistant
### to rebuild:
  sudo docker-compose pull;
  sudo docker-compose up -d --build homeassistant


### to get to homeassistant your IP port 8123 (find your IP = ifconfig or ip addr)
 http://<your IP addr>:8123
#or
 http://127.0.0.1:8123 ### local ip
### create youre userid and password, select your map location,click in the notification tab to see if any Home devices were found and configure them. 


# ___ try a differeint level of home assistant moving from stable to latest
 cd ~/HA/docker-build;
 sudo docker-compose stop; ### stop home assistant instance
 sudo docker-compose rm; ### remove the home assistant instance, this will also delete the HA /config files
                         ### DO NOT DO the rm command unless you want to start over
 vi docker-compose.yml; ### change the following stable to latest observing the yaml column formatting

 $ cat docker-compose.yml

version: '3'
services:
  homeassistant:
    container_name: home-assistant
    image: homeassistant/raspberrypi4-homeassistant:latest
    volumes:
      - /home/soroka/HA:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - TZ=America/New_York
    restart: always
    network_mode: host
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: 30s
      timeout: 10s
      retries: 6

 

 sudo docker-compose pull;
 sudo docker-compose up -d --build homeassistant;

# ___ portlander is a gui to view your docker status use a webbrowser to get to port 9000 and setup a userid/password
#
#


# ___ xubuntu running gdm3 is hanging or going blank when running gdm3
# switch the desktop from gdm3 to lightdm the xubuntu desktp keeps freezing when you leave it inactive????
#recover from a hung desktop
 <ctrl><alt>f3
 login and run
 sudo systemctl restart gdm
 <ctrl><alt>f1 ### to log back into the gui

 #to change to lightdm and see it that hangs
 sudo dpkg-reconfigure lightdm;
 reboot;

